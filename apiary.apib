FORMAT: 1A

# free-spirits
Free Spirits API allows users to get information about mixed drinks and ingredients.

# Group Drinks
## Drinks Collection [/drinks]
### List all Drinks [GET]
+ Response 200 (application/json)

        {
          "1": "Razzbaretto",
          "2": "Mexican Riptide",
          "3": "Burgundy Bishop",
          "4": "Singapore Sling (Raffles Hotel)",
          "5": "Blackula"
        }

## Drink [/drinks/{drink_id}]
A single Drink object with all its details

+ Parameters
    + drink_id (required, number, `1`) ... Numeric `id` of the Drink to perform action with. Has example value.

### Retrieve a Drink [GET]
+ Response 200 (application/json)

    + Header

    + Body

            {
              "description": "Referenced in the song \"Caribou Lou\" by rapper Tech N9ne where he sings about it - \"...151 rum, pineapple juice, and malibu, caribou, get them all numb...\". The directions are included in the song also but are scaled to a unknown jug quantity. Therefore mix as you please but remember it's the 151 that will hit you. Originated in Kansas City, MO.",
              "id": 9532,
              "ingredients": [
                "Malibu\u00ae coconut rum",
                "Pineapple juice",
                "151 proof rum"
              ],
              "name": "Caribou Lou",
              "quantities": [
                "1 part",
                "5 parts",
                "1 1/2 parts"
              ],
              "recipe": "Shake or serve up with ice in a highball glass."
            }

+ Response 201 (application/json)
    + Header

    + Body

            {
             "message": "no such drink"
            }

# Group Ingredients
## Ingredients Collection [/ingredients]
### List all Ingredients [GET]
+ Response 200 (application/json)

        {
          "1": "Bianco vermouth",
          "2": "Sour Apple Schnapps",
          "3": "Tomato ketchup",
          "4": "Aftershock\u00ae Hot & Cool cinnamon schnapps",
          "5": "Oyster Sauce"
        }

## Ingredient [/ingredients/{ingredient_id}]
A single Ingredient object with all its details

+ Parameters
    + ingredient_id (required, number, `1`) ... Numeric `id` of the Ingredient to perform action with. Has example value.

### Retrieve a Ingredient [GET]
+ Response 200 (application/json)

    + Header

    + Body

        {
          "alcohol": "0 g",
          "calories": "75",
          "carbohydrates": "18 g",
          "cholesterol": "0 mg",
          "description": "",
          "drinks": [
            "Picasso 1",
            "Screaming Chocolate Monkey",
            "Magic Sam",
            "Jaguar",
            "Parrot Perch",
            "Batida de Banana"
          ],
          "energy": "313",
          "fats": "0 g",
          "fiber": "-",
          "id": 35,
          "name": "Banana syrup",
          "protein": "0 g",
          "sodium": "0 mg",
          "sugars": "16 g"
        }

+ Response 201 (application/json)
    + Header

    + Body

            {
             "message": "no such ingredient"
            }

# Group Users
## Users Collection [/users]
### List all Users [GET]
+ Response 200 (application/json)

    {
      "1": "pbae@utexas.edu",
      "2": "liudi1990@gmail.com",
      "3": "urbanski@utexas.edu",
      "4": "home.isfar@gmail.com",
      "5": "menglinbrown@utexas.edu",
      "6": "jindtang@utexas.edu"
    }

## User [/users/{user_id}]
A single User object with all its details

+ Parameters
    + user_id (required, number, `1`) ... Numeric `id` of the User to perform action with. Has example value.

### Retrieve a User [GET]
+ Response 200 (application/json)

    + Header

    + Body

            {
              "email": "home.isfar@gmail.com",
              "first_name": "Ali",
              "id": 4,
              "last_name": "Homafar"
            }

+ Response 201 (application/json)
    + Header

    + Body

            {
             "message": "no such user"
            }
